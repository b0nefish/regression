		device	zxspectrum128

@DEBUG = 0

		include "../kernel/constants.inc"

;;-----------------------------------------------------------------------------
	macro border n
	  if DEBUG
	    if n > 0
		ld	a,n
	    else
		xor	a
	    endif
		out	(254),a
	  endif
	endm

;;-----------------------------------------------------------------------------

		org	RUNZONE
		define	MUSIC.waitfor 1417

@bufdat = #BEBA
@odkalisko = bufdat - 6912

begin:
	ifndef fx
		ld	hl,initscreen
		ld	de,#4000
		call	depack
	endif
		ld	a,#17
		call	xchg.bnk
		ei
		halt

		ld	a,#38
		ld	hl,#D800
		ld	de,#D801
		ld	bc,#2FF
		ld	(hl),#38
		ldir
		ld	hl,credit.n1ko.flash
		ld	de,#C000
		call	depack
		ld	a,#10
		call	xchg.bnk

		ld	hl,bufdat
		ld	b,75
		call	slucka
		ld	hl,bufdat
		ld	b,75
		call	slucka
		ld	hl,bufdat
		ld	b,23+26
		call	slucka

		push	hl
		ld	hl,credit.n1ko
		ld	de,credit.busy.flash
		ld	b,100
		call	showcredit
		pop	hl

		ld	b,26
		call	slucka
		ld	hl,bufdat
		ld	b,75
		call	slucka
		ld	hl,bufdat
		ld	b,75
		call	slucka
		ld	hl,bufdat
		ld	b,23
		call	slucka

		push	hl
		ld	hl,credit.busy
		ld	de,credit.mbr.flash
		ld	b,77
		call	showcredit
		pop	hl

		ld	b,26+26
		call	slucka
		ld	hl,bufdat
		ld	b,75
		call	slucka
		ld	hl,bufdat
		ld	b,75
		call	slucka

		push	hl
		ld	hl,credit.mbr
		ld	de,clrscr
		ld	b,111
		call	showcredit
		pop	hl

.loop		ei
		halt
		jr	.loop

showcredit:	push	de
		push	bc
		push	hl
		ld	a,#07
		ld	(actborder),a
		out	(254),a
		xor	#1A
		ld	(xchg.vram+1),a
		call	xchg.bnk
		halt
		halt
		halt
		ld	hl,#4000
		ld	de,odkalisko
		ld	bc,#1B00
		ldir
		pop	hl
		ld	de,#C000
		call	depack
		xor	a
		ld	(actborder),a
		out	(254),a
		call	xchg.vram
		pop	bc
		call	waitf
		ld	a,#07
		ld	(actborder),a
		out	(254),a
		call	xchg.vram
		halt
		halt
		halt
		ld	hl,odkalisko
		ld	de,#4000
		ld	bc,#1B00
		ldir
		halt
		xor	a
		ld	(actborder),a
		out	(254),a
		ld	a,#17
		call	xchg.bnk
		halt
		pop	hl
		ld	de,#C000
		call	depack
		ld	a,#10
		jp	xchg.bnk

slucka:		ei
		halt
		ld	a,(hl)
		dec	a
		ret	z
		push	bc
		border	1
		call	play
		border	0
		pop	bc
		inc	hl
		djnz	slucka
		ret

waitf:
.loop		ei
		halt
		djnz	.loop
		ret

play0:		call	drawchunk
play:		ld	a,(hl)
		and	#1F
		sub	#08
		inc	a
		jr	z,linearchunk
		ret	m
		add	a,#3F
		ld	d,a
		ld	a,(hl)
		inc	hl
		ld	e,(hl)
		inc	hl
		and	#E0
		jr	nz,play0
		ld	a,(hl)
		and	#1F
		ld	b,a
		ld	a,(hl)
		inc	hl
		ld	c,(hl)
		inc	hl
		push	hl
		sbc	hl,bc
		call	drawchunk
		pop	hl
		jr	play

drawchunk:	rrca
		rrca
		rrca
		cpl
		and	#1C
		ld	c,a
		rrca
		rrca
		add	a,c
		ld	($+4),a
		jr	$
	rept	8
		ld	a,(de)
		xor	(hl)
		ld	(de),a
		inc	hl
		inc	d
	endm
		org	$-1
		ret

linearchunk:	ld	a,(hl)
		and	#E0
		rrca
		add	a,#10
		rrca
		rrca
		rrca
		ld	b,a
		inc	hl
		ld	e,(hl)
		inc	hl
		ld	a,#40
		add	a,(hl)
		ld	d,a
.loop:		inc	hl
		ld	a,(de)
		xor	(hl)
		ld	(de),a
		inc	e
		djnz	.loop
		inc	hl
		jr	play

;;-----------------------------------------------------------------------------
clrscr:		db	#00,#00,#05,#FF,#A0,#20,#47,#05,#FD,#00,#00,#00,#80

credit:
.n1ko:		incbin "gfx/credit_n1ko.lzx"
.n1ko.flash:	incbin "gfx/credit_n1ko_flash.lzx"
.busy:		incbin "gfx/credit_busy.lzx"
.busy.flash:	incbin "gfx/credit_busy_flash.lzx"
.mbr:		incbin "gfx/credit_mbr.lzx"
.mbr.flash:	incbin "gfx/credit_mbr_flash.lzx"

	ifndef fx
initscreen:	incbin "gfx/oneplusani000.scr.lzx"
	else
		savebin "final.bin",begin,$-begin
	endif

;;-----------------------------------------------------------------------------
	ifndef fx
		slot 3
		page 6

		include "../kernel/kernel.micro.inc"

		slot 3
		page 0

		org	bufdat
		incbin	"oneplusani.ani.bin"

		savesna "oneplus.sna",microkernel
	endif
